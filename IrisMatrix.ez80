IMatrixLoadIdentity:
; input : hl matrix
	ex	de, hl
	ld	hl, IIdentityMatrix
	ld	bc, IMATRIX_SIZE
	ldir
	ex	de, hl
	ld	bc, -IMATRIX_SIZE
	add	hl, bc
	ret
IMatrixRotationX:
	ld	a, l
	ld	hl, ISIN_TABLE
	ld	l, a
	ld	a, (hl)
	ld	(ix+7), a
	neg
	ld	(ix+5), a
	ld	a, l
	add	a, 64
	ld	l, a
	ld	c, (hl)
	ld	(ix+4), c
	ld	(ix+8), c
	ld	a, 64
	ld	(ix+0), a
	xor	a, a
	ld	(ix+1), a
	ld	(ix+2), a
	ld	(ix+3), a
	ld	(ix+6), a
	ret
IMatrixRotationZ:
	ld	a, l
	ld	hl, ISIN_TABLE
	ld	l, a
	ld	a, (hl)
	ld	(ix+3), a
	neg
	ld	(ix+1), a
	ld	a, l
	add	a, 64
	ld	l, a
	ld	c, (hl)
	ld	(ix+0), c
	ld	(ix+4), c
	ld	a, 64
	ld	(ix+8), a
	xor	a, a
	ld	(ix+2), a
	ld	(ix+6), a
	ld	(ix+7), a
	ld	(ix+5), a
	ret
IMatrixRotationY:
	push	hl
	call	IQuatSin
	ld	a, h
	ld	(ix+2), a
	neg
	ld	(ix+6), a
	pop	hl
	call	IQuatCos
	ld	(ix+0), h
	ld	(ix+8), h
	ld	a, 64
	ld	(ix+4), a
	xor	a, a
	ld	(ix+1), a
	ld	(ix+3), a
	ld	(ix+5), a
	ld	(ix+7), a
	ret
IMatrixLoadRotation:
	ret
#ifdef	IRIS_CORE_matmlt
IMatrixMlt:
; (hl) = (ix) * (iy)
; 116 bytes, ~3800 TStates
	ex	de, hl
	ld	bc, 768
__IMatrixColLoop__:
	push	bc
	ld	b, 3
__IMatrixRowLoop__:
	push	bc
	ld	h, (ix+0)
	ld	l, (iy+0)
	xor	a, a
	bit	7, h
	jr	z, $+3
	add	a, l
	bit	7, l
	jr	z, $+3
	add	a, h
	mlt	hl
	ld	b, a
	xor	a, a
	ld	c, a
	sbc	hl, bc
	ld	b, (ix+1)
	ld	c, (iy+3)
	xor	a, a
	bit	7, b
	jr	z, $+3
	add	a, c
	bit	7, c
	jr	z, $+3
	add	a, b
	mlt	bc
	add	hl, bc
	ld	b, a
	xor	a, a
	ld	c, a
	sbc	hl, bc
	ld	b, (ix+2)
	ld	c, (iy+6)
	xor	a, a
	bit	7, b
	jr	z, $+3
	add	a, c
	bit	7, c
	jr	z, $+3
	add	a, b
	mlt	bc
	add	hl, bc
	ld	b, a
	xor	a, a
	ld	c, a
	sbc	hl, bc
	add	hl, hl
	add	hl, hl
	ld	a, h
	ld	(de), a
	inc	de
	inc	iy
	pop	bc
	djnz	__IMatrixRowLoop__
	lea	ix, ix+3
	lea	iy, iy-3
	pop	bc
	djnz	__IMatrixColLoop__
	lea	ix, ix-9
	ex	de, hl
	ld	bc, -9
	add	hl, bc
	ret
#endif
IMatrixTranspose:
; 192 TStates
	ld	c, (ix+3)
	ld	a, (ix+1)
	ld	(ix+3), a
	ld	(ix+1), c
	ld	c, (ix+6)
	ld	a, (ix+2)
	ld	(ix+6), a
	ld	(ix+2), c
	ld	c, (ix+7)
	ld	a, (ix+5)
	ld	(ix+7), a
	ld	(ix+5), c	
	ret
IMatrixPerspective:
	ret
