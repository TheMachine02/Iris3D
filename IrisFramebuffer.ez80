; code start - framebuffer functions

#define	IGREEN_BITS	%00000111
#define	IRED_BITS		%11100000
#define	IBLUE_BITS		%00011000
#define	ICOLOR_LOW_BIT	%00101001

ILerpRBG:
	ret
IBlendRBG:
; blend color c and a
; destroy b and e
	ld	b, a
	and	c
	and	ICOLOR_LOW_BIT
	ld	e, a
	ld	a, b
	and	~ICOLOR_LOW_BIT
	ld	b, a
	ld	a, c
	and	~ICOLOR_LOW_BIT
	add	a, b
	rra
	add	a, e
	ret
ILitRBG:
; lit a color (c) by factor (a)
; destroy bc, hl
	ld	b, a
	ld	a, c
	and	IGREEN_BITS
	ld	l, a
	ld	h, b
	mlt	hl
	add	hl, hl
	add	hl, hl
	ld	a, h
	tst	a, %11111000
	jr	z, $+4
	ld	h, IGREEN_BITS
	ld	a, c
	and	IBLUE_BITS
	ld	l, a
	ld	a, h
	ld	h, b
	mlt	hl
	add	hl, hl
	add	hl, hl
	ld	l, a
	ld	a, h
	tst	a, %11100000
	jr	z, $+4
	ld	a, IBLUE_BITS
	and	IBLUE_BITS
	or	l
	ld	h, b
	ld	b, a
	ld	a, c
	and	IRED_BITS
	ld	l, a
	mlt	hl
	ld	a, h
	tst	a, %11000000
	jr	z, $+4
	ld	h, IRED_BITS>>2
	add	hl, hl
	add	hl, hl
	ld	a, h
	and	IRED_BITS
	or	b
	ret
IResetPalette:
; load palette :
; color is 3-3-2 format, RGB
; calculate 1555 format color
CopyHL1555Palette:
	ld hl,$E30200				; palette mem
	ld b,0
_cp1555loop:
	ld d,b
	ld a,b
	and %11000000
	srl d
	rra
	ld e,a
	ld a,%00011111
	and b
	or e
	ld (hl),a
	inc hl
	ld (hl),d
	inc hl
	inc b
	jr nz,_cp1555loop

#comment
	ld	hl, ILCD_PALETTE
	ld	b, 0
_IPaletteLoop:
	ld	a, b
	rla
	rla
	rla
	ld	e, a
	rla
	rl	d
	rla
	rl	d
	and	%10000000
	ld	c, a
	ld	a, e
	and	%00011000
	or	c
	ld	(hl), a
	inc	hl
	ld	a, b
	rra
	and	%01110000
	ld	c, a
	ld	a, d
	and	%00000011
	or	c
	ld	(hl), a
	inc	hl
	inc b
	jr nz,_IPaletteLoop
#endcomment
	ret
ISetPalette:
; set the framebuffer palette
; input : hl
	ld	de, ILCD_PALETTE
	ld	bc, 512
	ldir
	ret
IFastClear:
	di
	or	a, a
	sbc	hl, hl
	add	hl, sp
	ex	de, hl
	
	ld	sp, (IFramebuffer)
	ld	hl, 76800
	add	hl, sp
	ld	sp, hl	

	ld	bc, 3200
	ld	hl, 0

_ClearLoop:
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	dec	bc
	ld	a, b
	or	c
	jr	nz, _ClearLoop
	
	ex	de, hl
	ld	sp, hl
	ret

IClear:
; reset framebuffer with color
; input : c
; output : none
; destroyed : all except ix,iy
	ld	hl, (IFramebuffer)
	ld	(hl), c
IClearEntry:
	ex	de, hl
	or	a, a
	sbc	hl, hl
	add	hl, de
	inc	de
;	ld	hl, $E40000
	ld	bc, 76799
	ldir
	ret
IFlush:
; swap the framebuffer and synchronize with LCD
	ld	hl, (ILCD_BUFFER) 
	ld	de, (IFramebuffer)
	ld	(IFramebuffer), hl
	ld	(ILCD_BUFFER), de
	ld	hl, ILCD_ICR
	set	2, (hl)
	ld	l, ILCD_ISR&$FF
_IWaitLoop:
	bit	2, (hl)
	jr	z, _IWaitLoop
	ret
IWait:
; wait until the LCD finish displaying the frame
	ld	de, ILCD_ICR
	ld	a, (de)
	or	%00000100	
	ld	(de), a
	jr	_IWaitLoop
ISwap:
; swap buffer without LCD acknowledge
	ld	hl, (ILCD_BUFFER) 
	ld	de, (IFramebuffer)
	ex	de, hl
	ld	(IFramebuffer), de
	ld	(ILCD_BUFFER), hl
	ret
IReadPixels:
	ret