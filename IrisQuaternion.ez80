#if	IVERSION==$0100

; code start - Quaternions utility functions

#ifdef	IUSE_FN_QUATLOADIDENTITY
IQuaternionLoadIdentity:
	ex	de, hl
	ld	hl, IIdentityQuaternion
	ld	bc, IQUATERNION_SIZE
	ldir
	ex	de, hl
	ld	bc, -IQUATERNION_SIZE
	add	hl, bc
	ret
#endif
#ifdef	IUSE_FN_QUATLOADROTATION
IQuaternionLoadRotation:
	ret
#endif
#ifdef	IUSE_FN_QUATMULT
IQuaternionMult:
	ret
#endif
#ifdef	IUSE_FN_QUATMAGNITUDE
IQuaternionMagnitude:
	ret
#endif
#ifdef	IUSE_FN_QUATCONJUGATE
IQuaternionConjugate:
	ld	de, (ix+3)
	or	a, a
	sbc	hl, hl
	sbc	hl, de
	ld	(ix+3), hl
	ld	de, (ix+6)
	or	a, a
	sbc	hl, hl
	sbc	hl, de
	ld	(ix+6), hl
	ld	de, (ix+9)
	or	a, a
	sbc	hl, hl
	sbc	hl, de
	ld	(ix+9), hl
	ret
#endif
#ifdef	IUSE_FN_QUATNORMALIZE
IQuaternionNormalize:
	ret
#endif
#ifdef	IUSE_FN_QUATGETMATRIX
IQuaternionGetMatrix:
; iy quaternion, ix matrix
; (qw, qx, qy, qz)
; 1 - 2*qy² - 2*qz² 	2*qx*qy - 2*qz*qw 	2*qx*qz + 2*qy*qw
; 2*qx*qy + 2*qz*qw 	1 - 2*qx² - 2*qz² 	2*qy*qz - 2*qx*qw
; 2*qx*qz - 2*qy*qw 	2*qy*qz + 2*qx*qw 	1 - 2*qx² - 2*qy²
	ld	hl, (iy+IQZ)
	ld	de, (iy+IQW)
	call	IQuatMul
	add	hl, hl
; 2*qz*qw
	push	hl
	ld	hl, (iy+IQX)
	ld	de, (iy+IQY)
	call	IQuatMul
	add	hl, hl
; 2*qx*qy
	pop	de
	or	a, a
	sbc	hl, de
	ld	(ix+1), h
	add	hl, de
	add	hl, de
	ld	(ix+3), h
; next
	ld	hl, (iy+IQY)
	ld	de, (iy+IQW)
	call	IQuatMul
	add	hl, hl
; 2*qw*qy
	push	hl
	ld	hl, (iy+IQX)
	ld	de, (iy+IQZ)
	call	IQuatMul
	add	hl, hl
; 2*qx*qz
	pop	de
	or	a, a
	sbc	hl, de
	ld	(ix+6), h
	add	hl, de
	add	hl, de
	ld	(ix+2), h
; next
	ld	hl, (iy+IQX)
	ld	de, (iy+IQW)
	call	IQuatMul
	add	hl, hl
; 2*qx*qw
	push	hl
	ld	hl, (iy+IQY)
	ld	de, (iy+IQZ)
	call	IQuatMul
	add	hl, hl
; 2*qy*qz
	pop	de
	or	a, a
	sbc	hl, de
	ld	(ix+5), h
	add	hl, de
	add	hl, de
	ld	(ix+7), h
; 1-2*qy²-2qz²
	ld	hl, (iy+IQY)
	call	IFPSquare
	add	hl, hl
	call	IUDiv64
	push	hl
	push	hl
	ld	hl, (iy+IQZ)
	call	IFPSquare
	add	hl, hl
	call	IUDiv64
	ex	de, hl
	pop	bc
	ld	hl, $004000
	or	a, a
	sbc	hl, bc
	or	a, a
	sbc	hl, de
	ld	(ix+0), h
; 1-2*qz²-2qx²	
	push	de
	ld	hl, (iy+IQX)
	call	IFPSquare
	add	hl, hl
	call	IUDiv64
	ex	de, hl
	pop	bc
	ld	hl, $004000
	or	a, a
	sbc	hl, bc
	or	a, a
	sbc	hl, de
	ld	(ix+4), h
; 1-2qx²-2qy²
	pop	bc
	ld	hl, $004000
	or	a, a
	sbc	hl, bc
	or	a, a
	sbc	hl, de
	ld	(ix+8), h
	ret
#endif
#else
	.echo	"IrisQuaternion.ez80 version doesn't correspond to Iris3D.inc version"
#endif
